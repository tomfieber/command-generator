{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/GitHub/pentesting/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\n\n// Sortable Command Card Component\nfunction SortableCommandCard({\n  command,\n  onEdit,\n  onDelete,\n  onCopy\n}) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id: command._id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"command-card\",\n    ...attributes,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-drag-handle\",\n        ...listeners,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drag-icon\",\n          children: \"\\u22EE\\u22EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"command-name\",\n          children: command.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-btn\",\n          onClick: () => onEdit(command),\n          title: \"Edit command\",\n          children: \"\\u270F\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => onDelete(command._id),\n          title: \"Delete command\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-btn\",\n          onClick: () => onCopy(command.generatedCommand || command.command),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-description\",\n      children: command.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-code\",\n      children: command.generatedCommand || command.command\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(SortableCommandCard, \"iTIyvp0X9kMGpdHRsWsr2+tGbVI=\", false, function () {\n  return [useSortable];\n});\n_c = SortableCommandCard;\nfunction App() {\n  _s2();\n  const [activeCategory, setActiveCategory] = useState('Web Application');\n  const [domain, setDomain] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [commands, setCommands] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showAddCommand, setShowAddCommand] = useState(false);\n  const [showEditCommand, setShowEditCommand] = useState(false);\n  const [editingCommand, setEditingCommand] = useState(null);\n\n  // Form states\n  const [newCategory, setNewCategory] = useState({\n    name: '',\n    type: 'Web Application',\n    description: ''\n  });\n  const [newCommand, setNewCommand] = useState({\n    name: '',\n    command: '',\n    description: '',\n    category: '',\n    phase: 'Reconnaissance',\n    tags: ''\n  });\n  const phases = ['Reconnaissance', 'Scanning', 'Enumeration', 'Exploitation', 'Post-Exploitation', 'Reporting'];\n  const categoryTypes = ['Web Application', 'Internal Network', 'External Network'];\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (activeCategory) {\n      fetchCommands();\n    }\n  }, [activeCategory]);\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/categories`);\n      setCategories(response.data);\n      setLoading(false);\n      setError('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error fetching categories:', err);\n      setError('Failed to fetch categories: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      setLoading(false);\n    }\n  };\n  const fetchCommands = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/commands`);\n      const filteredCommands = response.data.filter(cmd => cmd.category && cmd.category.type === activeCategory);\n      setCommands(filteredCommands);\n      setError('');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error fetching commands:', err);\n      setError('Failed to fetch commands: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n    }\n  };\n  const generateCommands = async () => {\n    if (!domain.trim()) {\n      setError('Please enter a domain name');\n      return;\n    }\n    try {\n      var _categories$find;\n      const categoryId = (_categories$find = categories.find(cat => cat.type === activeCategory)) === null || _categories$find === void 0 ? void 0 : _categories$find._id;\n      const response = await axios.post(`${API_BASE_URL}/commands/generate`, {\n        domain: domain.trim(),\n        categoryId\n      });\n\n      // Update commands with generated versions\n      const updatedCommands = commands.map(cmd => {\n        const generated = response.data.find(gen => gen._id === cmd._id);\n        return generated || cmd;\n      });\n      setCommands(updatedCommands);\n      setError('');\n    } catch (err) {\n      setError('Failed to generate commands');\n    }\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      setSuccess('Command copied to clipboard!');\n      setTimeout(() => setSuccess(''), 2000);\n    }).catch(() => {\n      setError('Failed to copy to clipboard');\n      setTimeout(() => setError(''), 2000);\n    });\n  };\n  const handleAddCategory = async () => {\n    try {\n      if (!newCategory.name.trim()) {\n        setError('Category name is required');\n        return;\n      }\n      await axios.post(`${API_BASE_URL}/categories`, newCategory);\n      setNewCategory({\n        name: '',\n        type: 'Web Application',\n        description: ''\n      });\n      setShowAddCategory(false);\n      fetchCategories();\n      setError('');\n      setSuccess('Category added successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Error adding category:', err);\n      setError('Failed to add category: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const handleAddCommand = async () => {\n    try {\n      var _categories$find2;\n      if (!newCommand.name.trim() || !newCommand.command.trim() || !newCommand.category) {\n        setError('Name, command, and category are required');\n        return;\n      }\n      const categoryId = (_categories$find2 = categories.find(cat => cat.name === newCommand.category)) === null || _categories$find2 === void 0 ? void 0 : _categories$find2._id;\n      if (!categoryId) {\n        setError('Selected category not found');\n        return;\n      }\n      const commandData = {\n        ...newCommand,\n        category: categoryId,\n        tags: newCommand.tags.split(',').map(tag => tag.trim()).filter(Boolean)\n      };\n      await axios.post(`${API_BASE_URL}/commands`, commandData);\n      setNewCommand({\n        name: '',\n        command: '',\n        description: '',\n        category: '',\n        phase: 'Reconnaissance',\n        tags: ''\n      });\n      setShowAddCommand(false);\n      fetchCommands();\n      setError('');\n      setSuccess('Command added successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error adding command:', err);\n      setError('Failed to add command: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n  const handleEditCommand = command => {\n    setEditingCommand(command);\n    setNewCommand({\n      name: command.name,\n      command: command.command,\n      description: command.description,\n      category: command.category.name,\n      phase: command.phase,\n      tags: command.tags.join(', ')\n    });\n    setShowEditCommand(true);\n  };\n  const handleUpdateCommand = async () => {\n    try {\n      var _categories$find3;\n      if (!newCommand.name.trim() || !newCommand.command.trim() || !newCommand.category) {\n        setError('Name, command, and category are required');\n        return;\n      }\n      const categoryId = (_categories$find3 = categories.find(cat => cat.name === newCommand.category)) === null || _categories$find3 === void 0 ? void 0 : _categories$find3._id;\n      if (!categoryId) {\n        setError('Selected category not found');\n        return;\n      }\n      const commandData = {\n        ...newCommand,\n        category: categoryId,\n        tags: newCommand.tags.split(',').map(tag => tag.trim()).filter(Boolean)\n      };\n      await axios.put(`${API_BASE_URL}/commands/${editingCommand._id}`, commandData);\n      setNewCommand({\n        name: '',\n        command: '',\n        description: '',\n        category: '',\n        phase: 'Reconnaissance',\n        tags: ''\n      });\n      setShowEditCommand(false);\n      setEditingCommand(null);\n      fetchCommands();\n      setError('');\n      setSuccess('Command updated successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      console.error('Error updating command:', err);\n      setError('Failed to update command: ' + (((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || err.message));\n    }\n  };\n  const handleDeleteCommand = async commandId => {\n    if (!window.confirm('Are you sure you want to delete this command?')) {\n      return;\n    }\n    try {\n      await axios.delete(`${API_BASE_URL}/commands/${commandId}`);\n      fetchCommands();\n      setSuccess('Command deleted successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      console.error('Error deleting command:', err);\n      setError('Failed to delete command: ' + (((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || err.message));\n    }\n  };\n  const handleDragEnd = async event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over || active.id === over.id) {\n      return;\n    }\n\n    // Find the phase that contains the dragged command\n    const draggedCommand = commands.find(cmd => cmd._id === active.id);\n    if (!draggedCommand) return;\n    const phase = draggedCommand.phase;\n    const phaseCommands = commands.filter(cmd => cmd.category && cmd.category.type === activeCategory && cmd.phase === phase).sort((a, b) => a.order - b.order);\n    const oldIndex = phaseCommands.findIndex(cmd => cmd._id === active.id);\n    const newIndex = phaseCommands.findIndex(cmd => cmd._id === over.id);\n    if (oldIndex === -1 || newIndex === -1) return;\n    const reorderedCommands = arrayMove(phaseCommands, oldIndex, newIndex);\n\n    // Update local state immediately for better UX\n    const updatedCommands = commands.map(cmd => {\n      if (cmd.category && cmd.category.type === activeCategory && cmd.phase === phase) {\n        const reorderedIndex = reorderedCommands.findIndex(rc => rc._id === cmd._id);\n        if (reorderedIndex !== -1) {\n          return {\n            ...cmd,\n            order: reorderedIndex\n          };\n        }\n      }\n      return cmd;\n    });\n    setCommands(updatedCommands);\n\n    // Send reorder request to backend\n    try {\n      const reorderData = reorderedCommands.map((cmd, index) => ({\n        id: cmd._id,\n        order: index\n      }));\n      await axios.put(`${API_BASE_URL}/commands/reorder`, {\n        commands: reorderData\n      });\n      setSuccess('Commands reordered successfully!');\n      setTimeout(() => setSuccess(''), 2000);\n    } catch (err) {\n      var _err$response7, _err$response7$data;\n      console.error('Error reordering commands:', err);\n      setError('Failed to save command order: ' + (((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || err.message));\n      // Revert changes on error\n      fetchCommands();\n    }\n  };\n  const groupedCommands = commands.reduce((acc, command) => {\n    const phase = command.phase;\n    if (!acc[phase]) {\n      acc[phase] = [];\n    }\n    acc[phase].push(command);\n    return acc;\n  }, {});\n\n  // Sort commands within each phase by order\n  Object.keys(groupedCommands).forEach(phase => {\n    groupedCommands[phase].sort((a, b) => (a.order || 0) - (b.order || 0));\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDEE1\\uFE0F PenTest Commands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: categoryTypes.map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: activeCategory === type ? 'active' : '',\n              onClick: () => setActiveCategory(type),\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this)\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u2699\\uFE0F Admin Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"admin-btn\",\n            onClick: () => setShowAddCategory(true),\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"admin-btn\",\n            onClick: () => setShowAddCommand(true),\n            children: \"Add Command\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Target Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: domain,\n            onChange: e => setDomain(e.target.value),\n            placeholder: \"Enter domain name (e.g., example.com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn\",\n            onClick: generateCommands,\n            disabled: !domain.trim(),\n            children: \"Generate Commands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), phases.map(phase => {\n        const phaseCommands = groupedCommands[phase] || [];\n        if (phaseCommands.length === 0) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phase-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"phase-title\",\n            children: phase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commands-grid\",\n            children: phaseCommands.map(command => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"command-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"command-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"command-name\",\n                  children: command.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"command-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"edit-btn\",\n                    onClick: () => handleEditCommand(command),\n                    title: \"Edit command\",\n                    children: \"\\u270F\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-btn\",\n                    onClick: () => handleDeleteCommand(command._id),\n                    title: \"Delete command\",\n                    children: \"\\uD83D\\uDDD1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"copy-btn\",\n                    onClick: () => copyToClipboard(command.generatedCommand || command.command),\n                    children: \"Copy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"command-description\",\n                children: command.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"command-code\",\n                children: command.generatedCommand || command.command\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 21\n              }, this)]\n            }, command._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)]\n        }, phase, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this);\n      }), showAddCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCategory.name,\n              onChange: e => setNewCategory({\n                ...newCategory,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCategory.type,\n              onChange: e => setNewCategory({\n                ...newCategory,\n                type: e.target.value\n              }),\n              children: categoryTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newCategory.description,\n              onChange: e => setNewCategory({\n                ...newCategory,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => setShowAddCategory(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: handleAddCategory,\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this), showAddCommand && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Command\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.name,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Command (use \", domain, \" as placeholder):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.command,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                command: e.target.value\n              }),\n              placeholder: \"nmap -sC -sV {domain}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newCommand.description,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCommand.category,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                category: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.name,\n                children: category.name\n              }, category._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phase:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCommand.phase,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                phase: e.target.value\n              }),\n              children: phases.map(phase => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: phase,\n                children: phase\n              }, phase, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tags (comma separated):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.tags,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                tags: e.target.value\n              }),\n              placeholder: \"nmap, scanning, ports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => setShowAddCommand(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: handleAddCommand,\n              children: \"Add Command\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this), showEditCommand && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Command\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.name,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Command (use \", domain, \" as placeholder):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.command,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                command: e.target.value\n              }),\n              placeholder: \"nmap -sC -sV {domain}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newCommand.description,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCommand.category,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                category: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.name,\n                children: category.name\n              }, category._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phase:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCommand.phase,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                phase: e.target.value\n              }),\n              children: phases.map(phase => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: phase,\n                children: phase\n              }, phase, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tags (comma separated):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.tags,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                tags: e.target.value\n              }),\n              placeholder: \"nmap, scanning, ports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => {\n                setShowEditCommand(false);\n                setEditingCommand(null);\n                setNewCommand({\n                  name: '',\n                  command: '',\n                  description: '',\n                  category: '',\n                  phase: 'Reconnaissance',\n                  tags: ''\n                });\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: handleUpdateCommand,\n              children: \"Update Command\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"w57tDkCO1ZVeBqWgTPviMRvAUxs=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SortableCommandCard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","verticalListSortingStrategy","useSortable","CSS","jsxDEV","_jsxDEV","API_BASE_URL","SortableCommandCard","command","onEdit","onDelete","onCopy","_s","attributes","listeners","setNodeRef","transform","transition","isDragging","id","_id","style","Transform","toString","opacity","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","title","generatedCommand","description","_c","App","_s2","activeCategory","setActiveCategory","domain","setDomain","categories","setCategories","commands","setCommands","loading","setLoading","error","setError","success","setSuccess","showAddCategory","setShowAddCategory","showAddCommand","setShowAddCommand","showEditCommand","setShowEditCommand","editingCommand","setEditingCommand","newCategory","setNewCategory","type","newCommand","setNewCommand","category","phase","tags","phases","categoryTypes","sensors","coordinateGetter","fetchCategories","fetchCommands","response","get","data","err","_err$response","_err$response$data","console","message","filteredCommands","filter","cmd","_err$response2","_err$response2$data","generateCommands","trim","_categories$find","categoryId","find","cat","post","updatedCommands","map","generated","gen","copyToClipboard","text","navigator","clipboard","writeText","then","setTimeout","catch","handleAddCategory","_err$response3","_err$response3$data","handleAddCommand","_categories$find2","commandData","split","tag","Boolean","_err$response4","_err$response4$data","handleEditCommand","join","handleUpdateCommand","_categories$find3","put","_err$response5","_err$response5$data","handleDeleteCommand","commandId","window","confirm","delete","_err$response6","_err$response6$data","handleDragEnd","event","active","over","draggedCommand","phaseCommands","sort","a","b","order","oldIndex","findIndex","newIndex","reorderedCommands","reorderedIndex","rc","reorderData","index","_err$response7","_err$response7$data","groupedCommands","reduce","acc","push","Object","keys","forEach","value","onChange","e","target","placeholder","disabled","length","_c2","$RefreshReg$"],"sources":["/Users/thomas/Documents/GitHub/pentesting/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport {\n  useSortable,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport './index.css';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\n// Sortable Command Card Component\nfunction SortableCommandCard({ command, onEdit, onDelete, onCopy }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: command._id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className=\"command-card\"\n      {...attributes}\n    >\n      <div className=\"command-header\">\n        <div className=\"command-drag-handle\" {...listeners}>\n          <span className=\"drag-icon\">⋮⋮</span>\n          <div className=\"command-name\">{command.name}</div>\n        </div>\n        <div className=\"command-actions\">\n          <button\n            className=\"edit-btn\"\n            onClick={() => onEdit(command)}\n            title=\"Edit command\"\n          >\n            ✏️\n          </button>\n          <button\n            className=\"delete-btn\"\n            onClick={() => onDelete(command._id)}\n            title=\"Delete command\"\n          >\n            🗑️\n          </button>\n          <button\n            className=\"copy-btn\"\n            onClick={() => onCopy(command.generatedCommand || command.command)}\n          >\n            Copy\n          </button>\n        </div>\n      </div>\n      <div className=\"command-description\">{command.description}</div>\n      <div className=\"command-code\">\n        {command.generatedCommand || command.command}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const [activeCategory, setActiveCategory] = useState('Web Application');\n  const [domain, setDomain] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [commands, setCommands] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showAddCommand, setShowAddCommand] = useState(false);\n  const [showEditCommand, setShowEditCommand] = useState(false);\n  const [editingCommand, setEditingCommand] = useState(null);\n\n  // Form states\n  const [newCategory, setNewCategory] = useState({\n    name: '',\n    type: 'Web Application',\n    description: ''\n  });\n\n  const [newCommand, setNewCommand] = useState({\n    name: '',\n    command: '',\n    description: '',\n    category: '',\n    phase: 'Reconnaissance',\n    tags: ''\n  });\n\n  const phases = ['Reconnaissance', 'Scanning', 'Enumeration', 'Exploitation', 'Post-Exploitation', 'Reporting'];\n  const categoryTypes = ['Web Application', 'Internal Network', 'External Network'];\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    if (activeCategory) {\n      fetchCommands();\n    }\n  }, [activeCategory]);\n\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/categories`);\n      setCategories(response.data);\n      setLoading(false);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n      setError('Failed to fetch categories: ' + (err.response?.data?.message || err.message));\n      setLoading(false);\n    }\n  };\n\n  const fetchCommands = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/commands`);\n      const filteredCommands = response.data.filter(cmd => \n        cmd.category && cmd.category.type === activeCategory\n      );\n      setCommands(filteredCommands);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching commands:', err);\n      setError('Failed to fetch commands: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const generateCommands = async () => {\n    if (!domain.trim()) {\n      setError('Please enter a domain name');\n      return;\n    }\n\n    try {\n      const categoryId = categories.find(cat => cat.type === activeCategory)?._id;\n      const response = await axios.post(`${API_BASE_URL}/commands/generate`, {\n        domain: domain.trim(),\n        categoryId\n      });\n      \n      // Update commands with generated versions\n      const updatedCommands = commands.map(cmd => {\n        const generated = response.data.find(gen => gen._id === cmd._id);\n        return generated || cmd;\n      });\n      setCommands(updatedCommands);\n      setError('');\n    } catch (err) {\n      setError('Failed to generate commands');\n    }\n  };\n\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text).then(() => {\n      setSuccess('Command copied to clipboard!');\n      setTimeout(() => setSuccess(''), 2000);\n    }).catch(() => {\n      setError('Failed to copy to clipboard');\n      setTimeout(() => setError(''), 2000);\n    });\n  };\n\n  const handleAddCategory = async () => {\n    try {\n      if (!newCategory.name.trim()) {\n        setError('Category name is required');\n        return;\n      }\n      \n      await axios.post(`${API_BASE_URL}/categories`, newCategory);\n      setNewCategory({ name: '', type: 'Web Application', description: '' });\n      setShowAddCategory(false);\n      fetchCategories();\n      setError('');\n      setSuccess('Category added successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      console.error('Error adding category:', err);\n      setError('Failed to add category: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const handleAddCommand = async () => {\n    try {\n      if (!newCommand.name.trim() || !newCommand.command.trim() || !newCommand.category) {\n        setError('Name, command, and category are required');\n        return;\n      }\n      \n      const categoryId = categories.find(cat => cat.name === newCommand.category)?._id;\n      if (!categoryId) {\n        setError('Selected category not found');\n        return;\n      }\n      \n      const commandData = {\n        ...newCommand,\n        category: categoryId,\n        tags: newCommand.tags.split(',').map(tag => tag.trim()).filter(Boolean)\n      };\n      \n      await axios.post(`${API_BASE_URL}/commands`, commandData);\n      setNewCommand({\n        name: '',\n        command: '',\n        description: '',\n        category: '',\n        phase: 'Reconnaissance',\n        tags: ''\n      });\n      setShowAddCommand(false);\n      fetchCommands();\n      setError('');\n      setSuccess('Command added successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      console.error('Error adding command:', err);\n      setError('Failed to add command: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const handleEditCommand = (command) => {\n    setEditingCommand(command);\n    setNewCommand({\n      name: command.name,\n      command: command.command,\n      description: command.description,\n      category: command.category.name,\n      phase: command.phase,\n      tags: command.tags.join(', ')\n    });\n    setShowEditCommand(true);\n  };\n\n  const handleUpdateCommand = async () => {\n    try {\n      if (!newCommand.name.trim() || !newCommand.command.trim() || !newCommand.category) {\n        setError('Name, command, and category are required');\n        return;\n      }\n      \n      const categoryId = categories.find(cat => cat.name === newCommand.category)?._id;\n      if (!categoryId) {\n        setError('Selected category not found');\n        return;\n      }\n      \n      const commandData = {\n        ...newCommand,\n        category: categoryId,\n        tags: newCommand.tags.split(',').map(tag => tag.trim()).filter(Boolean)\n      };\n      \n      await axios.put(`${API_BASE_URL}/commands/${editingCommand._id}`, commandData);\n      setNewCommand({\n        name: '',\n        command: '',\n        description: '',\n        category: '',\n        phase: 'Reconnaissance',\n        tags: ''\n      });\n      setShowEditCommand(false);\n      setEditingCommand(null);\n      fetchCommands();\n      setError('');\n      setSuccess('Command updated successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      console.error('Error updating command:', err);\n      setError('Failed to update command: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const handleDeleteCommand = async (commandId) => {\n    if (!window.confirm('Are you sure you want to delete this command?')) {\n      return;\n    }\n    \n    try {\n      await axios.delete(`${API_BASE_URL}/commands/${commandId}`);\n      fetchCommands();\n      setSuccess('Command deleted successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      console.error('Error deleting command:', err);\n      setError('Failed to delete command: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const handleDragEnd = async (event) => {\n    const { active, over } = event;\n\n    if (!over || active.id === over.id) {\n      return;\n    }\n\n    // Find the phase that contains the dragged command\n    const draggedCommand = commands.find(cmd => cmd._id === active.id);\n    if (!draggedCommand) return;\n\n    const phase = draggedCommand.phase;\n    const phaseCommands = commands.filter(cmd => \n      cmd.category && cmd.category.type === activeCategory && cmd.phase === phase\n    ).sort((a, b) => a.order - b.order);\n\n    const oldIndex = phaseCommands.findIndex(cmd => cmd._id === active.id);\n    const newIndex = phaseCommands.findIndex(cmd => cmd._id === over.id);\n\n    if (oldIndex === -1 || newIndex === -1) return;\n\n    const reorderedCommands = arrayMove(phaseCommands, oldIndex, newIndex);\n\n    // Update local state immediately for better UX\n    const updatedCommands = commands.map(cmd => {\n      if (cmd.category && cmd.category.type === activeCategory && cmd.phase === phase) {\n        const reorderedIndex = reorderedCommands.findIndex(rc => rc._id === cmd._id);\n        if (reorderedIndex !== -1) {\n          return { ...cmd, order: reorderedIndex };\n        }\n      }\n      return cmd;\n    });\n\n    setCommands(updatedCommands);\n\n    // Send reorder request to backend\n    try {\n      const reorderData = reorderedCommands.map((cmd, index) => ({\n        id: cmd._id,\n        order: index\n      }));\n\n      await axios.put(`${API_BASE_URL}/commands/reorder`, {\n        commands: reorderData\n      });\n\n      setSuccess('Commands reordered successfully!');\n      setTimeout(() => setSuccess(''), 2000);\n    } catch (err) {\n      console.error('Error reordering commands:', err);\n      setError('Failed to save command order: ' + (err.response?.data?.message || err.message));\n      // Revert changes on error\n      fetchCommands();\n    }\n  };\n\n  const groupedCommands = commands.reduce((acc, command) => {\n    const phase = command.phase;\n    if (!acc[phase]) {\n      acc[phase] = [];\n    }\n    acc[phase].push(command);\n    return acc;\n  }, {});\n\n  // Sort commands within each phase by order\n  Object.keys(groupedCommands).forEach(phase => {\n    groupedCommands[phase].sort((a, b) => (a.order || 0) - (b.order || 0));\n  });\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"sidebar\">\n        <h2>🛡️ PenTest Commands</h2>\n        <nav>\n          <ul>\n            {categoryTypes.map(type => (\n              <li key={type}>\n                <button\n                  className={activeCategory === type ? 'active' : ''}\n                  onClick={() => setActiveCategory(type)}\n                >\n                  {type}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </nav>\n        \n        <div className=\"admin-section\">\n          <h3>⚙️ Admin Panel</h3>\n          <div className=\"admin-buttons\">\n            <button \n              className=\"admin-btn\"\n              onClick={() => setShowAddCategory(true)}\n            >\n              Add Category\n            </button>\n            <button \n              className=\"admin-btn\"\n              onClick={() => setShowAddCommand(true)}\n            >\n              Add Command\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"main-content\">\n        {error && <div className=\"error\">{error}</div>}\n        {success && <div className=\"success\">{success}</div>}\n        \n        <div className=\"domain-input\">\n          <h3>Target Domain</h3>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={domain}\n              onChange={(e) => setDomain(e.target.value)}\n              placeholder=\"Enter domain name (e.g., example.com)\"\n            />\n            <button \n              className=\"generate-btn\"\n              onClick={generateCommands}\n              disabled={!domain.trim()}\n            >\n              Generate Commands\n            </button>\n          </div>\n        </div>\n\n        {phases.map(phase => {\n          const phaseCommands = groupedCommands[phase] || [];\n          if (phaseCommands.length === 0) return null;\n\n          return (\n            <div key={phase} className=\"phase-section\">\n              <h2 className=\"phase-title\">{phase}</h2>\n              <div className=\"commands-grid\">\n                {phaseCommands.map(command => (\n                  <div key={command._id} className=\"command-card\">\n                    <div className=\"command-header\">\n                      <div className=\"command-name\">{command.name}</div>\n                      <div className=\"command-actions\">\n                        <button\n                          className=\"edit-btn\"\n                          onClick={() => handleEditCommand(command)}\n                          title=\"Edit command\"\n                        >\n                          ✏️\n                        </button>\n                        <button\n                          className=\"delete-btn\"\n                          onClick={() => handleDeleteCommand(command._id)}\n                          title=\"Delete command\"\n                        >\n                          🗑️\n                        </button>\n                        <button\n                          className=\"copy-btn\"\n                          onClick={() => copyToClipboard(command.generatedCommand || command.command)}\n                        >\n                          Copy\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"command-description\">{command.description}</div>\n                    <div className=\"command-code\">\n                      {command.generatedCommand || command.command}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          );\n        })}\n\n        {/* Add Category Modal */}\n        {showAddCategory && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <h3>Add New Category</h3>\n              <div className=\"form-group\">\n                <label>Name:</label>\n                <input\n                  type=\"text\"\n                  value={newCategory.name}\n                  onChange={(e) => setNewCategory({...newCategory, name: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Type:</label>\n                <select\n                  value={newCategory.type}\n                  onChange={(e) => setNewCategory({...newCategory, type: e.target.value})}\n                >\n                  {categoryTypes.map(type => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Description:</label>\n                <textarea\n                  value={newCategory.description}\n                  onChange={(e) => setNewCategory({...newCategory, description: e.target.value})}\n                />\n              </div>\n              <div className=\"form-buttons\">\n                <button className=\"btn-cancel\" onClick={() => setShowAddCategory(false)}>\n                  Cancel\n                </button>\n                <button className=\"generate-btn\" onClick={handleAddCategory}>\n                  Add Category\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Add Command Modal */}\n        {showAddCommand && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <h3>Add New Command</h3>\n              <div className=\"form-group\">\n                <label>Name:</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.name}\n                  onChange={(e) => setNewCommand({...newCommand, name: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Command (use {domain} as placeholder):</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.command}\n                  onChange={(e) => setNewCommand({...newCommand, command: e.target.value})}\n                  placeholder=\"nmap -sC -sV {domain}\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Description:</label>\n                <textarea\n                  value={newCommand.description}\n                  onChange={(e) => setNewCommand({...newCommand, description: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Category:</label>\n                <select\n                  value={newCommand.category}\n                  onChange={(e) => setNewCommand({...newCommand, category: e.target.value})}\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map(category => (\n                    <option key={category._id} value={category.name}>{category.name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Phase:</label>\n                <select\n                  value={newCommand.phase}\n                  onChange={(e) => setNewCommand({...newCommand, phase: e.target.value})}\n                >\n                  {phases.map(phase => (\n                    <option key={phase} value={phase}>{phase}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Tags (comma separated):</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.tags}\n                  onChange={(e) => setNewCommand({...newCommand, tags: e.target.value})}\n                  placeholder=\"nmap, scanning, ports\"\n                />\n              </div>\n              <div className=\"form-buttons\">\n                <button className=\"btn-cancel\" onClick={() => setShowAddCommand(false)}>\n                  Cancel\n                </button>\n                <button className=\"generate-btn\" onClick={handleAddCommand}>\n                  Add Command\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Command Modal */}\n        {showEditCommand && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <h3>Edit Command</h3>\n              <div className=\"form-group\">\n                <label>Name:</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.name}\n                  onChange={(e) => setNewCommand({...newCommand, name: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Command (use {domain} as placeholder):</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.command}\n                  onChange={(e) => setNewCommand({...newCommand, command: e.target.value})}\n                  placeholder=\"nmap -sC -sV {domain}\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Description:</label>\n                <textarea\n                  value={newCommand.description}\n                  onChange={(e) => setNewCommand({...newCommand, description: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Category:</label>\n                <select\n                  value={newCommand.category}\n                  onChange={(e) => setNewCommand({...newCommand, category: e.target.value})}\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map(category => (\n                    <option key={category._id} value={category.name}>{category.name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Phase:</label>\n                <select\n                  value={newCommand.phase}\n                  onChange={(e) => setNewCommand({...newCommand, phase: e.target.value})}\n                >\n                  {phases.map(phase => (\n                    <option key={phase} value={phase}>{phase}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Tags (comma separated):</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.tags}\n                  onChange={(e) => setNewCommand({...newCommand, tags: e.target.value})}\n                  placeholder=\"nmap, scanning, ports\"\n                />\n              </div>\n              <div className=\"form-buttons\">\n                <button className=\"btn-cancel\" onClick={() => {\n                  setShowEditCommand(false);\n                  setEditingCommand(null);\n                  setNewCommand({\n                    name: '',\n                    command: '',\n                    description: '',\n                    category: '',\n                    phase: 'Reconnaissance',\n                    tags: ''\n                  });\n                }}>\n                  Cancel\n                </button>\n                <button className=\"generate-btn\" onClick={handleUpdateCommand}>\n                  Update Command\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}