{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/GitHub/pentesting/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3001/api';\nfunction App() {\n  _s();\n  const [activeCategory, setActiveCategory] = useState('Web Application');\n  const [domain, setDomain] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [commands, setCommands] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showAddCommand, setShowAddCommand] = useState(false);\n\n  // Form states\n  const [newCategory, setNewCategory] = useState({\n    name: '',\n    type: 'Web Application',\n    description: ''\n  });\n  const [newCommand, setNewCommand] = useState({\n    name: '',\n    command: '',\n    description: '',\n    category: '',\n    phase: 'Reconnaissance',\n    tags: ''\n  });\n  const phases = ['Reconnaissance', 'Scanning', 'Enumeration', 'Exploitation', 'Post-Exploitation', 'Reporting'];\n  const categoryTypes = ['Web Application', 'Internal Network', 'External Network'];\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (activeCategory) {\n      fetchCommands();\n    }\n  }, [activeCategory]);\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/categories`);\n      setCategories(response.data);\n      setLoading(false);\n      setError('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error fetching categories:', err);\n      setError('Failed to fetch categories: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      setLoading(false);\n    }\n  };\n  const fetchCommands = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/commands`);\n      const filteredCommands = response.data.filter(cmd => cmd.category && cmd.category.type === activeCategory);\n      setCommands(filteredCommands);\n      setError('');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error fetching commands:', err);\n      setError('Failed to fetch commands: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n    }\n  };\n  const generateCommands = async () => {\n    if (!domain.trim()) {\n      setError('Please enter a domain name');\n      return;\n    }\n    try {\n      var _categories$find;\n      const categoryId = (_categories$find = categories.find(cat => cat.type === activeCategory)) === null || _categories$find === void 0 ? void 0 : _categories$find._id;\n      const response = await axios.post(`${API_BASE_URL}/commands/generate`, {\n        domain: domain.trim(),\n        categoryId\n      });\n\n      // Update commands with generated versions\n      const updatedCommands = commands.map(cmd => {\n        const generated = response.data.find(gen => gen._id === cmd._id);\n        return generated || cmd;\n      });\n      setCommands(updatedCommands);\n      setError('');\n    } catch (err) {\n      setError('Failed to generate commands');\n    }\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      // Could add a toast notification here\n    });\n  };\n  const handleAddCategory = async () => {\n    try {\n      if (!newCategory.name.trim()) {\n        setError('Category name is required');\n        return;\n      }\n      await axios.post(`${API_BASE_URL}/categories`, newCategory);\n      setNewCategory({\n        name: '',\n        type: 'Web Application',\n        description: ''\n      });\n      setShowAddCategory(false);\n      fetchCategories();\n      setError('');\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Error adding category:', err);\n      setError('Failed to add category: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const handleAddCommand = async () => {\n    try {\n      var _categories$find2;\n      if (!newCommand.name.trim() || !newCommand.command.trim() || !newCommand.category) {\n        setError('Name, command, and category are required');\n        return;\n      }\n      const categoryId = (_categories$find2 = categories.find(cat => cat.name === newCommand.category)) === null || _categories$find2 === void 0 ? void 0 : _categories$find2._id;\n      if (!categoryId) {\n        setError('Selected category not found');\n        return;\n      }\n      const commandData = {\n        ...newCommand,\n        category: categoryId,\n        tags: newCommand.tags.split(',').map(tag => tag.trim()).filter(Boolean)\n      };\n      await axios.post(`${API_BASE_URL}/commands`, commandData);\n      setNewCommand({\n        name: '',\n        command: '',\n        description: '',\n        category: '',\n        phase: 'Reconnaissance',\n        tags: ''\n      });\n      setShowAddCommand(false);\n      fetchCommands();\n      setError('');\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error adding command:', err);\n      setError('Failed to add command: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n  const groupedCommands = commands.reduce((acc, command) => {\n    const phase = command.phase;\n    if (!acc[phase]) {\n      acc[phase] = [];\n    }\n    acc[phase].push(command);\n    return acc;\n  }, {});\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDEE1\\uFE0F PenTest Commands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: categoryTypes.map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: activeCategory === type ? 'active' : '',\n              onClick: () => setActiveCategory(type),\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Target Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: domain,\n            onChange: e => setDomain(e.target.value),\n            placeholder: \"Enter domain name (e.g., example.com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn\",\n            onClick: generateCommands,\n            disabled: !domain.trim(),\n            children: \"Generate Commands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), phases.map(phase => {\n        const phaseCommands = groupedCommands[phase] || [];\n        if (phaseCommands.length === 0) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phase-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"phase-title\",\n            children: phase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commands-grid\",\n            children: phaseCommands.map(command => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"command-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"command-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"command-name\",\n                  children: command.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"copy-btn\",\n                  onClick: () => copyToClipboard(command.generatedCommand || command.command),\n                  children: \"Copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"command-description\",\n                children: command.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"command-code\",\n                children: command.generatedCommand || command.command\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)]\n            }, command._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, phase, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u2699\\uFE0F Admin Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"admin-btn\",\n            onClick: () => setShowAddCategory(true),\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"admin-btn\",\n            onClick: () => setShowAddCommand(true),\n            children: \"Add Command\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), showAddCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCategory.name,\n              onChange: e => setNewCategory({\n                ...newCategory,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCategory.type,\n              onChange: e => setNewCategory({\n                ...newCategory,\n                type: e.target.value\n              }),\n              children: categoryTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newCategory.description,\n              onChange: e => setNewCategory({\n                ...newCategory,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => setShowAddCategory(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: handleAddCategory,\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), showAddCommand && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Command\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.name,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Command (use \", domain, \" as placeholder):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.command,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                command: e.target.value\n              }),\n              placeholder: \"nmap -sC -sV {domain}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newCommand.description,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCommand.category,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                category: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.name,\n                children: category.name\n              }, category._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phase:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCommand.phase,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                phase: e.target.value\n              }),\n              children: phases.map(phase => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: phase,\n                children: phase\n              }, phase, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tags (comma separated):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newCommand.tags,\n              onChange: e => setNewCommand({\n                ...newCommand,\n                tags: e.target.value\n              }),\n              placeholder: \"nmap, scanning, ports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => setShowAddCommand(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: handleAddCommand,\n              children: \"Add Command\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0/32v22oMJvn72filhBOzd8rr8U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","activeCategory","setActiveCategory","domain","setDomain","categories","setCategories","commands","setCommands","loading","setLoading","error","setError","success","setSuccess","showAddCategory","setShowAddCategory","showAddCommand","setShowAddCommand","newCategory","setNewCategory","name","type","description","newCommand","setNewCommand","command","category","phase","tags","phases","categoryTypes","fetchCategories","fetchCommands","response","get","data","err","_err$response","_err$response$data","console","message","filteredCommands","filter","cmd","_err$response2","_err$response2$data","generateCommands","trim","_categories$find","categoryId","find","cat","_id","post","updatedCommands","map","generated","gen","copyToClipboard","text","navigator","clipboard","writeText","then","handleAddCategory","_err$response3","_err$response3$data","handleAddCommand","_categories$find2","commandData","split","tag","Boolean","_err$response4","_err$response4$data","groupedCommands","reduce","acc","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","disabled","phaseCommands","length","generatedCommand","_c","$RefreshReg$"],"sources":["/Users/thomas/Documents/GitHub/pentesting/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\nfunction App() {\n  const [activeCategory, setActiveCategory] = useState('Web Application');\n  const [domain, setDomain] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [commands, setCommands] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showAddCommand, setShowAddCommand] = useState(false);\n\n  // Form states\n  const [newCategory, setNewCategory] = useState({\n    name: '',\n    type: 'Web Application',\n    description: ''\n  });\n\n  const [newCommand, setNewCommand] = useState({\n    name: '',\n    command: '',\n    description: '',\n    category: '',\n    phase: 'Reconnaissance',\n    tags: ''\n  });\n\n  const phases = ['Reconnaissance', 'Scanning', 'Enumeration', 'Exploitation', 'Post-Exploitation', 'Reporting'];\n  const categoryTypes = ['Web Application', 'Internal Network', 'External Network'];\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    if (activeCategory) {\n      fetchCommands();\n    }\n  }, [activeCategory]);\n\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/categories`);\n      setCategories(response.data);\n      setLoading(false);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n      setError('Failed to fetch categories: ' + (err.response?.data?.message || err.message));\n      setLoading(false);\n    }\n  };\n\n  const fetchCommands = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/commands`);\n      const filteredCommands = response.data.filter(cmd => \n        cmd.category && cmd.category.type === activeCategory\n      );\n      setCommands(filteredCommands);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching commands:', err);\n      setError('Failed to fetch commands: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const generateCommands = async () => {\n    if (!domain.trim()) {\n      setError('Please enter a domain name');\n      return;\n    }\n\n    try {\n      const categoryId = categories.find(cat => cat.type === activeCategory)?._id;\n      const response = await axios.post(`${API_BASE_URL}/commands/generate`, {\n        domain: domain.trim(),\n        categoryId\n      });\n      \n      // Update commands with generated versions\n      const updatedCommands = commands.map(cmd => {\n        const generated = response.data.find(gen => gen._id === cmd._id);\n        return generated || cmd;\n      });\n      setCommands(updatedCommands);\n      setError('');\n    } catch (err) {\n      setError('Failed to generate commands');\n    }\n  };\n\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text).then(() => {\n      // Could add a toast notification here\n    });\n  };\n\n  const handleAddCategory = async () => {\n    try {\n      if (!newCategory.name.trim()) {\n        setError('Category name is required');\n        return;\n      }\n      \n      await axios.post(`${API_BASE_URL}/categories`, newCategory);\n      setNewCategory({ name: '', type: 'Web Application', description: '' });\n      setShowAddCategory(false);\n      fetchCategories();\n      setError('');\n    } catch (err) {\n      console.error('Error adding category:', err);\n      setError('Failed to add category: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const handleAddCommand = async () => {\n    try {\n      if (!newCommand.name.trim() || !newCommand.command.trim() || !newCommand.category) {\n        setError('Name, command, and category are required');\n        return;\n      }\n      \n      const categoryId = categories.find(cat => cat.name === newCommand.category)?._id;\n      if (!categoryId) {\n        setError('Selected category not found');\n        return;\n      }\n      \n      const commandData = {\n        ...newCommand,\n        category: categoryId,\n        tags: newCommand.tags.split(',').map(tag => tag.trim()).filter(Boolean)\n      };\n      \n      await axios.post(`${API_BASE_URL}/commands`, commandData);\n      setNewCommand({\n        name: '',\n        command: '',\n        description: '',\n        category: '',\n        phase: 'Reconnaissance',\n        tags: ''\n      });\n      setShowAddCommand(false);\n      fetchCommands();\n      setError('');\n    } catch (err) {\n      console.error('Error adding command:', err);\n      setError('Failed to add command: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const groupedCommands = commands.reduce((acc, command) => {\n    const phase = command.phase;\n    if (!acc[phase]) {\n      acc[phase] = [];\n    }\n    acc[phase].push(command);\n    return acc;\n  }, {});\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"sidebar\">\n        <h2>🛡️ PenTest Commands</h2>\n        <nav>\n          <ul>\n            {categoryTypes.map(type => (\n              <li key={type}>\n                <button\n                  className={activeCategory === type ? 'active' : ''}\n                  onClick={() => setActiveCategory(type)}\n                >\n                  {type}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </div>\n\n      <div className=\"main-content\">\n        {error && <div className=\"error\">{error}</div>}\n        \n        <div className=\"domain-input\">\n          <h3>Target Domain</h3>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={domain}\n              onChange={(e) => setDomain(e.target.value)}\n              placeholder=\"Enter domain name (e.g., example.com)\"\n            />\n            <button \n              className=\"generate-btn\"\n              onClick={generateCommands}\n              disabled={!domain.trim()}\n            >\n              Generate Commands\n            </button>\n          </div>\n        </div>\n\n        {phases.map(phase => {\n          const phaseCommands = groupedCommands[phase] || [];\n          if (phaseCommands.length === 0) return null;\n\n          return (\n            <div key={phase} className=\"phase-section\">\n              <h2 className=\"phase-title\">{phase}</h2>\n              <div className=\"commands-grid\">\n                {phaseCommands.map(command => (\n                  <div key={command._id} className=\"command-card\">\n                    <div className=\"command-header\">\n                      <div className=\"command-name\">{command.name}</div>\n                      <button\n                        className=\"copy-btn\"\n                        onClick={() => copyToClipboard(command.generatedCommand || command.command)}\n                      >\n                        Copy\n                      </button>\n                    </div>\n                    <div className=\"command-description\">{command.description}</div>\n                    <div className=\"command-code\">\n                      {command.generatedCommand || command.command}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          );\n        })}\n\n        <div className=\"admin-section\">\n          <h3>⚙️ Admin Panel</h3>\n          <div className=\"admin-buttons\">\n            <button \n              className=\"admin-btn\"\n              onClick={() => setShowAddCategory(true)}\n            >\n              Add Category\n            </button>\n            <button \n              className=\"admin-btn\"\n              onClick={() => setShowAddCommand(true)}\n            >\n              Add Command\n            </button>\n          </div>\n        </div>\n\n        {/* Add Category Modal */}\n        {showAddCategory && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <h3>Add New Category</h3>\n              <div className=\"form-group\">\n                <label>Name:</label>\n                <input\n                  type=\"text\"\n                  value={newCategory.name}\n                  onChange={(e) => setNewCategory({...newCategory, name: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Type:</label>\n                <select\n                  value={newCategory.type}\n                  onChange={(e) => setNewCategory({...newCategory, type: e.target.value})}\n                >\n                  {categoryTypes.map(type => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Description:</label>\n                <textarea\n                  value={newCategory.description}\n                  onChange={(e) => setNewCategory({...newCategory, description: e.target.value})}\n                />\n              </div>\n              <div className=\"form-buttons\">\n                <button className=\"btn-cancel\" onClick={() => setShowAddCategory(false)}>\n                  Cancel\n                </button>\n                <button className=\"generate-btn\" onClick={handleAddCategory}>\n                  Add Category\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Add Command Modal */}\n        {showAddCommand && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <h3>Add New Command</h3>\n              <div className=\"form-group\">\n                <label>Name:</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.name}\n                  onChange={(e) => setNewCommand({...newCommand, name: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Command (use {domain} as placeholder):</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.command}\n                  onChange={(e) => setNewCommand({...newCommand, command: e.target.value})}\n                  placeholder=\"nmap -sC -sV {domain}\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Description:</label>\n                <textarea\n                  value={newCommand.description}\n                  onChange={(e) => setNewCommand({...newCommand, description: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Category:</label>\n                <select\n                  value={newCommand.category}\n                  onChange={(e) => setNewCommand({...newCommand, category: e.target.value})}\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map(category => (\n                    <option key={category._id} value={category.name}>{category.name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Phase:</label>\n                <select\n                  value={newCommand.phase}\n                  onChange={(e) => setNewCommand({...newCommand, phase: e.target.value})}\n                >\n                  {phases.map(phase => (\n                    <option key={phase} value={phase}>{phase}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Tags (comma separated):</label>\n                <input\n                  type=\"text\"\n                  value={newCommand.tags}\n                  onChange={(e) => setNewCommand({...newCommand, tags: e.target.value})}\n                  placeholder=\"nmap, scanning, ports\"\n                />\n              </div>\n              <div className=\"form-buttons\">\n                <button className=\"btn-cancel\" onClick={() => setShowAddCommand(false)}>\n                  Cancel\n                </button>\n                <button className=\"generate-btn\" onClick={handleAddCommand}>\n                  Add Command\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}